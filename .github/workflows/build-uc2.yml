name: Build UC2

on: [workflow_dispatch]

env:
  CI: true

jobs:
  Windows:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.name }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - { 
              os: windows-2019,
              arch: x64,
              python-arch: x64,
              python-ver: '3.8',
              name: 'windows-x64 MINGW64 shared',
              shared: 'yes',
              mingw: MINGW32,
              mingw-arch: x86,
              artifact: 'windows_mingw32_shared.7z',
              build_type: 'Debug',
              archiver: '7z a',
              generators: 'Ninja'
            }
          - { 
              os: windows-2019,
              arch: x64,
              python-arch: x64,
              python-ver: '3.8',
              name: 'windows-x64 MINGW64 static',
              shared: 'no',
              mingw: MINGW32,
              mingw-arch: x86_64,
              artifact: 'windows_mingw32_static.7z',
              build_type: 'Debug',
              archiver: '7z a',
              generators: 'Ninja'
            }
          - {
              os: windows-2019,
              arch: x86,
              python-arch: x86,
              python-ver: '3.8',
              name: 'windows-x86 MSVC 32bit shared',
              msvc-arch: x86,
              artifact: 'windows_msvc32_shared.7z',
              shared: 'yes',
              build_type: 'Debug',
              archiver: '7z a',
              generators: 'Visual Studio 16 2019'
            }
          - { 
              os: windows-2019,
              arch: x86,
              python-arch: x86,
              python-ver: '3.8',
              name: 'windows-x86 MSVC 32bit static',
              msvc-arch: x86,
              artifact: 'windows_msvc32_static.7z',
              shared: 'no',
              build_type: 'Debug',
              archiver: '7z a',
              generators: 'Visual Studio 16 2019'
            }
        compiler: [ gcc ]
    steps:
    - uses: actions/checkout@v2

    - name: 'üõ†Ô∏è Win MINGW setup'
      if: contains(matrix.config.mingw, 'MINGW')
      uses: msys2/setup-msys2@v2
      with:
        msystem: ${{ matrix.config.mingw }}
        install: >-
          git
          mingw-w64-${{ matrix.config.mingw-arch }}-cmake
          mingw-w64-${{ matrix.config.mingw-arch }}-ninja
          mingw-w64-${{ matrix.config.mingw-arch }}-cmocka
          mingw-w64-${{ matrix.config.mingw-arch }}-${{ matrix.compiler }}
          mingw-w64-${{ matrix.config.mingw-arch }}-toolchain

    - name: 'üõ†Ô∏è Win MSVC 64 setup'
      if: contains(matrix.config.name, 'MSVC 64')
      uses: microsoft/setup-msbuild@v1
    
    - name: 'üõ†Ô∏è Win MSVC 64 dev cmd setup'
      if: contains(matrix.config.name, 'MSVC 64')
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x64

    - name: 'üöß Win MSVC 64 build'
      if: contains(matrix.config.name, 'MSVC 64')
      shell: bash
      run: |
        choco install ninja cmake
        ninja --version
        cmake --version
        mkdir build
        cmake \
          -S . \
          -B . \
          -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} \
          -G "${{ matrix.config.generators }}" \
          -DCMAKE_INSTALL_PREFIX:PATH=instdir \
          -DBUILD_SHARED_LIBS=${{ matrix.config.shared }}
        cmake --build . --config ${{ matrix.config.build_type }}
        cmake --install . --strip --config ${{ matrix.config.build_type }}
        ctest -VV -C ${{ matrix.config.build_type }}
        mv Debug instdir

    - name: 'üõ†Ô∏è Win MSVC 32 setup'
      if: contains(matrix.config.name, 'MSVC 32')
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x86

    - name: 'üöß Win MSVC 32 build'
      if: contains(matrix.config.name, 'MSVC 32')
      shell: bash
      run: |
        choco install ninja cmake
        ninja --version
        cmake --version
        mkdir build
        cmake \
          -S . \
          -B . \
          -A "win32" \
          -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} \
          -G "${{ matrix.config.generators }}" \
          -DCMAKE_INSTALL_PREFIX:PATH=instdir \
          -DBUILD_SHARED_LIBS=${{ matrix.config.shared }}
        cmake --build . --config ${{ matrix.config.build_type }}
        cmake --install . --strip --config ${{ matrix.config.build_type }}
        ctest -VV -C ${{ matrix.config.build_type }}
        mv Debug instdir

    - name: 'üöß Win MINGW build'
      if: contains(matrix.config.mingw, 'MINGW')
      shell: msys2 {0}
      run: |
        if [ ${{ matrix.config.mingw }} == 'MINGW32' ]; then
          export CPPFLAGS=-D__USE_MINGW_ANSI_STDIO=1
          #export CC=i686-w64-mingw32-gcc
          export AR=gcc-ar
          export RANLIB=gcc-ranlib
          export CFLAGS="-m32"
          export LDFLAGS="-m32"
          export LDFLAGS_STATIC="-m32"
          export UNICORN_QEMU_FLAGS="--cpu=i386"
        fi
        mkdir build
        mkdir instdir
        cmake \
          -S . \
          -B . \
          -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} \
          -G "${{ matrix.config.generators }}" \
          -DCMAKE_INSTALL_PREFIX:PATH=instdir \
          -DBUILD_SHARED_LIBS=${{ matrix.config.shared }}
        cmake --build . --config ${{ matrix.config.build_type }}
        cmake --install . --strip
        ctest -VV -C ${{ matrix.config.build_type }}

    - name: 'üì¶ Pack artifact'
      if: always()
      shell: bash
      working-directory: instdir
      run: |
        ls -laR
        ${{ matrix.config.archiver }} ../${{ matrix.config.artifact }} . ../test*

    - name: 'üì§ Upload artifact'
      if: always()
      uses: actions/upload-artifact@v1
      with:
        path: ./${{ matrix.config.artifact }}
        name: ${{ matrix.config.artifact }}

